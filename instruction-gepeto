# üçï Projeto Pizzaria ‚Äì Roadmap de Desenvolvimento

Este documento descreve o plano de a√ß√£o para o desenvolvimento de um sistema completo de pedidos para uma pizzaria. O projeto envolve a cria√ß√£o do front-end, back-end, banco de dados, autentica√ß√£o, chatbot, painel administrativo, e muito mais.

---

## üß± Fase 1 ‚Äì Planejamento e Setup Inicial
üéØ Objetivo: Preparar o ambiente de desenvolvimento e reposit√≥rios

- [X] Criar organiza√ß√£o e reposit√≥rios no GitHub:
  - [X] `pizzaria-frontend`
  - [X] `pizzaria-backend`
- [ ] Configurar ESLint, Prettier e `.editorconfig`
- [ ] Escrever `README.md` inicial com escopo e descri√ß√£o
- [ ] Configurar monorepo com Turborepo (opcional)
- [ ] Escolher hospedagem:
  - [ ] Vercel (frontend)
  - [ ] Railway ou Render (backend)
- [ ] Configurar CI/CD com GitHub Actions:
  - [ ] Deploy autom√°tico do front
  - [ ] Deploy e testes do back

---

## üíΩ Fase 2 ‚Äì Modelagem e Banco de Dados
üéØ Objetivo: Definir o modelo relacional e configurar o banco

- [ ] Criar modelo ER (MER)
- [ ] Configurar Prisma ORM
- [ ] Escrever `schema.prisma` com entidades:
  - Usu√°rio, Endere√ßo, Pedido, Produto, PizzaPersonalizada, Funcion√°rio, LogAtividade, etc.
- [ ] Executar `npx prisma migrate dev`
- [ ] Popular o banco com dados de exemplo (`seed.ts`)
- [ ] Configurar conex√£o com PostgreSQL local/cloud (ex: Railway)

---

## ‚öôÔ∏è Fase 3 ‚Äì Backend com NestJS
üéØ Objetivo: Criar API REST com estrutura limpa, modular e escal√°vel

- [ ] Criar projeto NestJS
- [ ] Estruturar pastas por dom√≠nio
- [ ] Implementar m√≥dulos principais:
  - [ ] Autentica√ß√£o (JWT, bcrypt)
  - [ ] CRUD de Produtos
  - [ ] CRUD de Pedidos
  - [ ] Personaliza√ß√£o de pizzas
  - [ ] Acompanhamento de pedido via WebSocket
  - [ ] Middleware de autentica√ß√£o e roles
  - [ ] DTOs com valida√ß√£o (class-validator ou Zod)
- [ ] Integra√ß√£o com Prisma (servi√ßo de banco de dados)
- [ ] Implementar testes com Jest:
  - [ ] Testes unit√°rios
  - [ ] Testes de integra√ß√£o

---

## üé® Fase 4 ‚Äì Front-End com Next.js
üéØ Objetivo: Desenvolver a interface do cliente e do painel administrativo

- [ ] Criar projeto com Next.js 14 + TypeScript
- [ ] Configurar:
  - [ ] Tailwind CSS
  - [ ] shadcn/ui ou Radix UI
  - [ ] React Hook Form + Zod
  - [ ] React Query (TanStack)
  - [ ] Axios ou Fetch API
- [ ] Criar layout base (Header, Footer, etc.)

### P√°ginas p√∫blicas:
- [ ] P√°gina institucional (hist√≥ria, contato)
- [ ] P√°gina de card√°pio
- [ ] Montagem de pizza personalizada
- [ ] Carrinho e checkout
- [ ] Rastreamento de pedido

### P√°ginas privadas:
- [ ] Login / Cadastro
- [ ] Dashboard administrativo
- [ ] Gest√£o de produtos e pedidos
- [ ] Controle de estoque e disponibilidade
- [ ] Configura√ß√£o do chatbot

---

## ü§ñ Fase 5 ‚Äì Chatbot Customiz√°vel
üéØ Objetivo: Permitir ao admin configurar mensagens do chatbot

- [ ] Backend:
  - [ ] Endpoints de configura√ß√£o
  - [ ] L√≥gica de exibi√ß√£o de mensagens din√¢micas
- [ ] Frontend:
  - [ ] Componente de chatbot fixo
  - [ ] Tela de configura√ß√£o no painel admin

---

## üõ°Ô∏è Fase 6 ‚Äì Seguran√ßa e LGPD
üéØ Objetivo: Garantir seguran√ßa dos dados e conformidade com LGPD

- [ ] Criptografia de senhas (bcrypt)
- [ ] Termo de consentimento no checkout
- [ ] Pol√≠tica de privacidade no rodap√©
- [ ] Middleware de roles (admin, operador)
- [ ] Logout por inatividade
- [ ] Endpoint de exclus√£o de conta
- [ ] Prote√ß√µes contra XSS e CSRF

---

## üß™ Fase 7 ‚Äì Testes e Valida√ß√£o
üéØ Objetivo: Garantir qualidade e confiabilidade do sistema

- [ ] Backend:
  - [ ] Testes unit√°rios (Jest)
  - [ ] Testes de integra√ß√£o
- [ ] Frontend:
  - [ ] Testes de componentes (React Testing Library)
  - [ ] Testes E2E (Cypress ou Playwright)
- [ ] Teste completo do fluxo de pedido
- [ ] Testes de autentica√ß√£o e controle de acesso

---

## üöÄ Fase 8 ‚Äì Deploy e Go Live
üéØ Objetivo: Publicar o sistema em produ√ß√£o

- [ ] Registrar dom√≠nio (ex: pizzariajoao.com.br)
- [ ] Apontar dom√≠nio para o frontend (Vercel)
- [ ] Configurar ambiente de produ√ß√£o no backend
- [ ] Deploy do PostgreSQL cloud (ex: Railway)
- [ ] Testes finais em produ√ß√£o
- [ ] Apresentar ao dono da pizzaria

---

## üìö Fase 9 ‚Äì Documenta√ß√£o e Aprendizado
üéØ Objetivo: Consolidar conhecimento e deixar projeto pronto para o portf√≥lio

- [ ] Criar `/docs` com documenta√ß√£o t√©cnica
- [ ] Escrever ADRs (decis√µes de arquitetura)
- [ ] Criar artigo sobre o projeto (Medium, Dev.to ou LinkedIn)
- [ ] Documentar aprendizados no reposit√≥rio
- [ ] Adicionar o projeto ao portf√≥lio

---

> _Projeto feito com amor, c√≥digo limpo e pizza quente!_
